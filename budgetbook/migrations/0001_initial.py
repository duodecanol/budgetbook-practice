# Generated by Django 3.2.9 on 2022-01-17 09:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=65, verbose_name='amount')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='related data')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('name', models.CharField(max_length=128, verbose_name='category name')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='category description')),
                ('classification', models.IntegerField(choices=[(0, 'Expense'), (1, 'Income'), (2, 'Transfer')], default=0, verbose_name='classification for transaction')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='created datetime')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified datetime')),
                ('is_active', models.BooleanField(default=True, help_text='사용자가 활성화/비활성화를 지정하여 복구할수도 있음', verbose_name='is Active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Currency name')),
                ('code', models.CharField(blank=True, max_length=6, verbose_name='Currency code')),
                ('sign', models.CharField(max_length=6, verbose_name='Currency sign')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='budgetbook.asset')),
                ('bank_name', models.CharField(max_length=255, verbose_name='bank name')),
                ('account_number', models.CharField(max_length=255, unique=True, verbose_name='bank account number')),
            ],
            options={
                'abstract': False,
            },
            bases=('budgetbook.asset',),
        ),
        migrations.CreateModel(
            name='Cash',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='budgetbook.asset')),
            ],
            options={
                'verbose_name': 'cash',
                'verbose_name_plural': 'cashes',
            },
            bases=('budgetbook.asset',),
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='budgetbook.asset')),
                ('card_company_name', models.CharField(max_length=255, verbose_name='card company name')),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=4, help_text='The amount of credit you can use to make your purchases', max_digits=65, null=True, verbose_name='credit limit')),
                ('statement_balance', models.DecimalField(blank=True, decimal_places=4, help_text='The amount you owe on your credit card as of the latest billing cycle. It includes any finance charges and late fees.', max_digits=65, null=True, verbose_name='statement balance')),
                ('outstanding_balance', models.DecimalField(blank=True, decimal_places=4, help_text='Total unpaid amount', max_digits=65, null=True, verbose_name='outstanding balance')),
                ('billing_cycle_date', models.IntegerField(default=10, help_text='월마다 돌아오는 대금납부 지정일', verbose_name='date of monthly billing cycle')),
            ],
            options={
                'abstract': False,
            },
            bases=('budgetbook.asset',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('title', models.CharField(max_length=127, verbose_name='transaction title')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=65, verbose_name='amount')),
                ('classification', models.IntegerField(choices=[(0, 'Expense'), (1, 'Income'), (2, 'Transfer')], default=0, verbose_name='transaction classification')),
                ('seller', models.CharField(help_text='거래처명. 거래한 업체의 상호명 개인의 이름 등', max_length=127, verbose_name='seller name')),
                ('transaction_datetime', models.DateTimeField(null=True, verbose_name='datetime of transaction')),
                ('data', models.JSONField(blank=True, help_text='추가적인 세부내역/기재사항 등을 저장', null=True, verbose_name='additional transaction data')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='created datetime of this item')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='budgetbook.category', verbose_name='transaction category')),
                ('currency', models.ForeignKey(default=85, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='budgetbook.currency', verbose_name='currency')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='budgetbook.asset', verbose_name='payment method')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
